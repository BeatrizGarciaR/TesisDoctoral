#                 "BLS and",eta[2],"ALS ambulances", sep=" "))
# axis(1, at=1:5, labels=len_I)
lines(matrix_1[1:length(len_S)], lwd=3, col=1)
points(matrix_bestbound_1[1:length(len_S)], pch=15, cex=1.5, col=1)
lines(matrix_bestbound_1[1:length(len_S)], lwd=3, col=1, lty=2)
points(matrix_1[(length(len_S)+1):(2*length(len_S))], pch=16, cex=1.5, col=2)
lines(matrix_1[(length(len_S)+1):(2*length(len_S))], lwd=3, col=2)
points(matrix_bestbound_1[(length(len_S)+1):(2*length(len_S))], pch=16, cex=1.5, col=2)
lines(matrix_bestbound_1[(length(len_S)+1):(2*length(len_S))], lwd=3, col=2, lty=2)
points(matrix_1[(2*length(len_S)+1):(3*length(len_S))], pch=17, cex=1.5, col=3)
lines(matrix_1[(2*length(len_S)+1):(3*length(len_S))], lwd=3, col=3)
points(matrix_bestbound_1[(2*length(len_S)+1):(3*length(len_S))], pch=17, cex=1.5, col=3)
lines(matrix_bestbound_1[(2*length(len_S)+1):(3*length(len_S))], lwd=3, col=3, lty=2)
#points(matrix_1[(3*length(len_S)+1):(4*length(len_S))], pch=18, cex=1.5, col=4)
#lines(matrix_1[(3*length(len_S)+1):(4*length(len_S))], lwd=3, col=4)
#points(matrix_bestbound_1[(3*length(len_S)+1):(4*length(len_S))], pch=18, cex=1.5, col=4)
#lines(matrix_bestbound_1[(3*length(len_S)+1):(4*length(len_S))], lwd=3, col=4, lty=2)
#points(matrix_1[(4*length(len_S)+1):(5*length(len_S))], pch=19, cex=1.5, col=6)
#lines(matrix_1[(4*length(len_S)+1):(5*length(len_S))], lwd=3, col=6)
#points(matrix_bestbound_1[(4*length(len_S)+1):(5*length(len_S))], pch=19, cex=1.5, col=6)
#lines(matrix_bestbound_1[(4*length(len_S)+1):(5*length(len_S))], lwd=3, col=6, lty=2)
legend(x="top", legend = len_I, horiz=TRUE, cex = 2.3,
fill = c(1, 2, 3, 4, 6, 7, 8), title = "Demand points", bty="n")
#legend(x="topleft", legend = len_S, horiz=TRUE, cex = 0.9, fill = c(1, 2, 3, 4, 6), title = "Scenarios")
legend(x = "left",         # Posición
legend = c("best objective", "best bound"), # Textos de la leyenda
lty = c(1, 2),          # Tipo de líneas
col = c(1, 1),          # Colores de las líneas
lwd = 2, bty = "n", cex = 2.3)
#dev.off()
counti = counti+1
}
filas = c(seq(from=(1+counti*(5*length(len_I))), to=((1+counti*(5*length(len_I)))+((5*length(len_I))-1))))
aux_0 <- as.data.frame(read.csv(paste('Tesis_Obj_Zs_Scenarios_070224_AllAmb.csv', sep="")))
aux <- as.data.frame(aux_0[filas, c(2,4,6)])
matrix_1 <- matrix(nrow=length(len_S), ncol=length(len_I))
colnames(matrix_1) <- len_I
rownames(matrix_1) <- len_S
count = 1
for (l in 1:length(len_S)){
for (s in 1:length(len_I)){
#matrix[s,l] = aux[count,3]
if (is.na(aux[count,3]) == FALSE){
matrix_1[s,l] = aux[count,3]
}
else{
matrix_1[s,l] = 0
}
count = count + 1
}
}
# objective value graphics scenarios vs demand point
counti = 0
par(mfrow = c(1, 3), mar=c(4.5, 5, 3.1, 0.9))
filas = c(seq(from=(1+counti*(5*length(len_I))), to=((1+counti*(5*length(len_I)))+((5*length(len_I))-1))))
aux_0 <- as.data.frame(read.csv(paste('Tesis_Obj_Zs_Scenarios_070224_AllAmb.csv', sep="")))
aux <- as.data.frame(aux_0[filas, c(2,4,6)])
matrix_1 <- matrix(nrow=length(len_S), ncol=length(len_I))
colnames(matrix_1) <- len_I
rownames(matrix_1) <- len_S
count = 1
for (l in 1:length(len_S)){
for (s in 1:length(len_I)){
#matrix[s,l] = aux[count,3]
if (is.na(aux[count,3]) == FALSE){
matrix_1[l,s] = aux[count,3]
}
else{
matrix_1[l,s] = 0
}
count = count + 1
}
}
aux_bb <- as.data.frame(aux_0[filas, c(2,4,7)])
matrix_bestbound_1 <- matrix(nrow=length(len_S), ncol=length(len_I))
colnames(matrix_bestbound_1) <- len_I
rownames(matrix_bestbound_1) <- len_S
count = 1
aux_bb <- as.data.frame(aux_0[filas, c(2,4,7)])
matrix_bestbound_1 <- matrix(nrow=length(len_S), ncol=length(len_I))
colnames(matrix_bestbound_1) <- len_I
rownames(matrix_bestbound_1) <- len_S
count = 1
for (l in 1:length(len_S)){
for (s in 1:length(len_I)){
#matrix[s,l] = aux[count,3]
if (is.na(aux_bb[count,3]) == FALSE){
matrix_bestbound_1[l,s] = aux_bb[count,3]
}
else{
matrix_bestbound_1[l,s] = 0
}
count = count + 1
}
}
if(a == 1){
plot(matrix_1[1:length(len_S)], pch=15, col=1, cex=1.5, ylim=c(0,max(matrix_bestbound_1)+20),
cex.lab=2.7, cex.axis = 2.5, xlab="scenarios", ylab="objective value",
xaxt= "n", tck = 0.02) #ann = FALSE,
title(paste(eta[1],"BLS and",eta[2],"ALS ambulances", sep=" "), cex.main = 3.5)
} else{
plot(matrix_1[1:length(len_S)], pch=15, col=1, cex=1.5, ylim=c(0,max(matrix_bestbound_1)+20),
cex.lab=2.7, cex.axis = 2.5,xlab="scenarios", xaxt = "n",
ylab="objective value", tck = 0.02)
title(paste(eta[1], "BLS and",eta[2],"ALS ambulances", sep=" "), cex.main=3.5)
}
axis(1, at=1:length(len_S), labels=len_S, cex.axis = 2.5, tck = 0.02)
# #pdf(paste("Objval_",eta[1],"_",eta[2],".pdf", sep=""))
# plot(matrix[1:5], pch=15, col=1, cex=1.5, ylim=c(min(matrix)-2, max(matrix_bestbound)+2),
#      xlab="demand points", ylab="objective value", xaxt = "n",
#      main=paste("Objective value for 16 potential sites \n considering",eta[1],
#                 "BLS and",eta[2],"ALS ambulances", sep=" "))
# axis(1, at=1:5, labels=len_I)
lines(matrix_1[1:length(len_S)], lwd=3, col=1)
points(matrix_bestbound_1[1:length(len_S)], pch=15, cex=1.5, col=1)
lines(matrix_bestbound_1[1:length(len_S)], lwd=3, col=1, lty=2)
points(matrix_1[(length(len_S)+1):(2*length(len_S))], pch=16, cex=1.5, col=2)
lines(matrix_1[(length(len_S)+1):(2*length(len_S))], lwd=3, col=2)
points(matrix_bestbound_1[(length(len_S)+1):(2*length(len_S))], pch=16, cex=1.5, col=2)
lines(matrix_bestbound_1[(length(len_S)+1):(2*length(len_S))], lwd=3, col=2, lty=2)
points(matrix_1[(2*length(len_S)+1):(3*length(len_S))], pch=17, cex=1.5, col=3)
lines(matrix_1[(2*length(len_S)+1):(3*length(len_S))], lwd=3, col=3)
points(matrix_bestbound_1[(2*length(len_S)+1):(3*length(len_S))], pch=17, cex=1.5, col=3)
lines(matrix_bestbound_1[(2*length(len_S)+1):(3*length(len_S))], lwd=3, col=3, lty=2)
points(matrix_1[(3*length(len_S)+1):(4*length(len_S))], pch=18, cex=1.5, col=4)
matrix_1[(3*length(len_S)+1
)[]
]
matrix_1[(3*length(len_S)+1):(4*length(len_S))]
source("~/EstudiosProfesionales/FIME/Doctorado/TesisDoctoral/Codes/Tesis/ModeloBase_PartialCoverage/Obj_Zs/ResultadosExperimentos1_Graficas.R")
source("~/EstudiosProfesionales/FIME/Doctorado/TesisDoctoral/Codes/Tesis/ModeloBase_PartialCoverage/Obj_Zs/ResultadosExperimentos1_Graficas.R")
# time value graphics
counti = 0
par(mfrow = c(1, 3), mar=c(4.5, 5, 3.1, 0.9))
for (a in 1:length(amb[,1])){
# run time
eta <- amb[a,]
filas = c(seq(from=(1+counti*(5*length(len_I))), to=((1+counti*(5*length(len_I)))+((5*length(len_I))-1))))
aux_0 <- as.data.frame(read.csv(paste('Tesis_Obj_Zs_Scenarios_070224_AllAmb.csv', sep="")))
aux <- as.data.frame(aux_0[filas, c(2,4,10)])
matrix <- matrix(nrow=length(len_I), ncol=length(len_S))
colnames(matrix) <- len_S
rownames(matrix) <- len_I
count = 1
for (s in 1:length(len_I)){
for (l in 1:length(len_S)){
#matrix[s,l] = aux[count,3]
if (is.na(aux[count,3]) == FALSE){
matrix[s,l] = aux[count,3]
}
else{
matrix[s,l] = 0
}
count = count + 1
}
}
#pdf(paste("Timeval_",eta[1],"_",eta[2],".pdf", sep=""))
if(a == 1){
plot(matrix[1:length(len_I)], pch=15, col=1, cex=1.5, ylim=c(0,4000),
cex.lab=2.7, cex.axis = 2.5, xlab="demand points", ylab="runtime in seconds",
xaxt= "n", tck = 0.02) #ann = FALSE,
title(paste(eta[1],"BLS and",eta[2],"ALS ambulances", sep=" "), cex.main = 3.5)
} else{
plot(matrix[1:length(len_I)], pch=15, col=1, cex=1.5, ylim=c(0,4000),
cex.lab=2.7, cex.axis = 2.5,xlab="demand points", xaxt = "n",
ylab="runtime in seconds", tck = 0.02)
title(paste(eta[1], "BLS and",eta[2],"ALS ambulances", sep=" "), cex.main=3.5)
}
axis(1, at=1:length(len_I), labels=len_I, cex.axis = 2.5, tck = 0.02)
# plot(matrix[1:5], pch=15, col=1, cex=1.5, ylim=c(0, 15000),
#      xlab="demand points", ylab="runtime in seconds", xaxt = "n",
#      main=paste("Runtime for 16 potential sites \n considering",eta[1],
#                 "BLS and",eta[2],"ALS ambulances", sep=" "))
# axis(1, at=1:5, labels=len_I)
lines(matrix[1:length(len_I)], lwd=3, col=1)
points(matrix[(length(len_I)+1):(2*length(len_I))], pch=16, cex=1.5, col=2)
lines(matrix[(length(len_I)+1):(2*length(len_I))], lwd=3, col=2)
points(matrix[(2*length(len_I)+1):(3*length(len_I))], pch=17, cex=1.5, col=3)
lines(matrix[(2*length(len_I)+1):(3*length(len_I))], lwd=3, col=3)
points(matrix[(3*length(len_I)+1):(4*length(len_I))], pch=18, cex=1.5, col=4)
lines(matrix[(3*length(len_I)+1):(4*length(len_I))], lwd=3, col=4)
points(matrix[(4*length(len_I)+1):(5*length(len_I))], pch=19, cex=1.5, col=6)
lines(matrix[(4*length(len_I)+1):(5*length(len_I))], lwd=3, col=6)
legend(x="top", legend = len_S, horiz=TRUE,
fill = c(1, 2, 3, 4, 6), title = "Scenarios",bty = "n", cex = 2.3)
#dev.off()
counti = counti+1
}
View(matrix)
# time value graphics
counti = 0
par(mfrow = c(1, 3), mar=c(4.5, 5, 3.1, 0.9))
for (a in 1:length(amb[,1])){
# run time
eta <- amb[a,]
filas = c(seq(from=(1+counti*(5*length(len_I))), to=((1+counti*(5*length(len_I)))+((5*length(len_I))-1))))
aux_0 <- as.data.frame(read.csv(paste('Tesis_Obj_Zs_Scenarios_070224_AllAmb.csv', sep="")))
aux <- as.data.frame(aux_0[filas, c(2,4,10)])
matrix_1 <- matrix(nrow=length(len_S), ncol=length(len_I))
colnames(matrix_1) <- len_I
rownames(matrix_1) <- len_S
count = 1
for (l in 1:length(len_S)){
for (s in 1:length(len_I)){
#matrix[s,l] = aux[count,3]
if (is.na(aux[count,3]) == FALSE){
matrix_1[l,s] = aux[count,3]
}
else{
matrix_1[l,s] = 0
}
count = count + 1
}
}
#pdf(paste("Timeval_",eta[1],"_",eta[2],".pdf", sep=""))
if(a == 1){
plot(matrix_1[1:length(len_S)], pch=15, col=1, cex=1.5, ylim=c(0,4000),
cex.lab=2.7, cex.axis = 2.5, xlab="scenarios", ylab="runtime in seconds",
xaxt= "n", tck = 0.02) #ann = FALSE,
title(paste(eta[1],"BLS and",eta[2],"ALS ambulances", sep=" "), cex.main = 3.5)
} else{
plot(matrix_1[1:length(len_S)], pch=15, col=1, cex=1.5, ylim=c(0,4000),
cex.lab=2.7, cex.axis = 2.5,xlab="scenarios", xaxt = "n",
ylab="runtime in seconds", tck = 0.02)
title(paste(eta[1], "BLS and",eta[2],"ALS ambulances", sep=" "), cex.main=3.5)
}
axis(1, at=1:length(len_S), labels=len_S, cex.axis = 2.5, tck = 0.02)
# plot(matrix[1:5], pch=15, col=1, cex=1.5, ylim=c(0, 15000),
#      xlab="demand points", ylab="runtime in seconds", xaxt = "n",
#      main=paste("Runtime for 16 potential sites \n considering",eta[1],
#                 "BLS and",eta[2],"ALS ambulances", sep=" "))
# axis(1, at=1:5, labels=len_I)
lines(matrix_1[1:length(len_S)], lwd=3, col=1)
points(matrix_1[(length(len_S)+1):(2*length(len_S))], pch=16, cex=1.5, col=2)
lines(matrix_1[(length(len_S)+1):(2*length(len_S))], lwd=3, col=2)
points(matrix_1[(2*length(len_S)+1):(3*length(len_S))], pch=17, cex=1.5, col=3)
lines(matrix_1[(2*length(len_S)+1):(3*length(len_S))], lwd=3, col=3)
# points(matrix_1[(3*length(len_S)+1):(4*length(len_S))], pch=18, cex=1.5, col=4)
# lines(matrix_1[(3*length(len_S)+1):(4*length(len_S))], lwd=3, col=4)
# points(matrix_1[(4*length(len_S)+1):(5*length(len_S))], pch=19, cex=1.5, col=6)
# lines(matrix_1[(4*length(len_S)+1):(5*length(len_S))], lwd=3, col=6)
legend(x="top", legend = len_I, horiz=TRUE,
fill = c(1, 2, 3, 4, 6), title = "Demand points",bty = "n", cex = 2.3)
#dev.off()
counti = counti+1
}
View(matrix)
View(matrix_1)
filas = c(seq(from=(1+counti*(5*length(len_I))), to=((1+counti*(5*length(len_I)))+((5*length(len_I))-1))))
aux_0 <- as.data.frame(read.csv(paste('Tesis_Obj_Zs_Scenarios_070224_AllAmb.csv', sep="")))
aux <- as.data.frame(aux_0[filas, c(2,4,10)])
matrix_1 <- matrix(nrow=length(len_S), ncol=length(len_I))
colnames(matrix_1) <- len_I
rownames(matrix_1) <- len_S
count = 1
for (l in 1:length(len_S)){
for (s in 1:length(len_I)){
#matrix[s,l] = aux[count,3]
if (is.na(aux[count,3]) == FALSE){
matrix_1[l,s] = aux[count,3]
}
else{
matrix_1[l,s] = 0
}
}
count = count + 1
}
View(matrix_1)
filas = c(seq(from=(1+counti*(5*length(len_I))), to=((1+counti*(5*length(len_I)))+((5*length(len_I))-1))))
aux_0 <- as.data.frame(read.csv(paste('Tesis_Obj_Zs_Scenarios_070224_AllAmb.csv', sep="")))
aux <- as.data.frame(aux_0[filas, c(2,4,10)])
matrix_1 <- matrix(nrow=length(len_S), ncol=length(len_I))
colnames(matrix_1) <- len_I
rownames(matrix_1) <- len_S
count = 1
for (l in 1:length(len_S)){
for (s in 1:length(len_I)){
#matrix[s,l] = aux[count,3]
if (is.na(aux[count,3]) == FALSE){
matrix_1[l,s] = aux[count,3]
}
else{
matrix_1[l,s] = 0
}
count = count + 1
}
}
count = 1
for (l in 1:length(len_S)){
for (s in 1:length(len_I)){
#matrix[s,l] = aux[count,3]
if (is.na(aux[count,3]) == FALSE){
matrix_1[l,s] = aux[count,3]
}
else{
matrix_1[l,s] = 0
}
count = count + 1
}
}
# time value graphics
counti = 0
par(mfrow = c(1, 3), mar=c(4.5, 5, 3.1, 0.9))
for (a in 1:length(amb[,1])){
# run time
eta <- amb[a,]
filas = c(seq(from=(1+counti*(5*length(len_I))), to=((1+counti*(5*length(len_I)))+((5*length(len_I))-1))))
aux_0 <- as.data.frame(read.csv(paste('Tesis_Obj_Zs_Scenarios_070224_AllAmb.csv', sep="")))
aux <- as.data.frame(aux_0[filas, c(2,4,10)])
matrix_1 <- matrix(nrow=length(len_S), ncol=length(len_I))
colnames(matrix_1) <- len_I
rownames(matrix_1) <- len_S
count = 1
for (l in 1:length(len_S)){
for (s in 1:length(len_I)){
#matrix[s,l] = aux[count,3]
if (is.na(aux[count,3]) == FALSE){
matrix_1[l,s] = aux[count,3]
}
else{
matrix_1[l,s] = 0
}
count = count + 1
}
}
#pdf(paste("Timeval_",eta[1],"_",eta[2],".pdf", sep=""))
if(a == 1){
plot(matrix_1[1:length(len_S)], pch=15, col=1, cex=1.5, ylim=c(0,4000),
cex.lab=2.7, cex.axis = 2.5, xlab="scenarios", ylab="runtime in seconds",
xaxt= "n", tck = 0.02) #ann = FALSE,
title(paste(eta[1],"BLS and",eta[2],"ALS ambulances", sep=" "), cex.main = 3.5)
} else{
plot(matrix_1[1:length(len_S)], pch=15, col=1, cex=1.5, ylim=c(0,4000),
cex.lab=2.7, cex.axis = 2.5,xlab="scenarios", xaxt = "n",
ylab="runtime in seconds", tck = 0.02)
title(paste(eta[1], "BLS and",eta[2],"ALS ambulances", sep=" "), cex.main=3.5)
}
axis(1, at=1:length(len_S), labels=len_S, cex.axis = 2.5, tck = 0.02)
# plot(matrix[1:5], pch=15, col=1, cex=1.5, ylim=c(0, 15000),
#      xlab="demand points", ylab="runtime in seconds", xaxt = "n",
#      main=paste("Runtime for 16 potential sites \n considering",eta[1],
#                 "BLS and",eta[2],"ALS ambulances", sep=" "))
# axis(1, at=1:5, labels=len_I)
lines(matrix_1[1:length(len_S)], lwd=3, col=1)
points(matrix_1[(length(len_S)+1):(2*length(len_S))], pch=16, cex=1.5, col=2)
lines(matrix_1[(length(len_S)+1):(2*length(len_S))], lwd=3, col=2)
points(matrix_1[(2*length(len_S)+1):(3*length(len_S))], pch=17, cex=1.5, col=3)
lines(matrix_1[(2*length(len_S)+1):(3*length(len_S))], lwd=3, col=3)
# points(matrix_1[(3*length(len_S)+1):(4*length(len_S))], pch=18, cex=1.5, col=4)
# lines(matrix_1[(3*length(len_S)+1):(4*length(len_S))], lwd=3, col=4)
# points(matrix_1[(4*length(len_S)+1):(5*length(len_S))], pch=19, cex=1.5, col=6)
# lines(matrix_1[(4*length(len_S)+1):(5*length(len_S))], lwd=3, col=6)
legend(x="top", legend = len_I, horiz=TRUE,
fill = c(1, 2, 3, 4, 6), title = "Demand points",bty = "n", cex = 2.3)
#dev.off()
counti = counti+1
}
counti=2
filas = c(seq(from=(1+counti*(5*length(len_I))), to=((1+counti*(5*length(len_I)))+((5*length(len_I))-1))))
aux_0 <- as.data.frame(read.csv(paste('Tesis_Obj_Zs_Scenarios_070224_AllAmb.csv', sep="")))
aux <- as.data.frame(aux_0[filas, c(2,4,10)])
matrix_1 <- matrix(nrow=length(len_S), ncol=length(len_I))
colnames(matrix_1) <- len_I
rownames(matrix_1) <- len_S
count = 1
for (l in 1:length(len_S)){
for (s in 1:length(len_I)){
#matrix[s,l] = aux[count,3]
if (is.na(aux[count,3]) == FALSE){
matrix_1[l,s] = aux[count,3]
}
else{
matrix_1[l,s] = 0
}
count = count + 1
}
}
View(matrix)
View(matrix_1)
filas = c(seq(from=(1+counti*(5*length(len_I))), to=((1+counti*(5*length(len_I)))+((5*length(len_I))-1))))
aux_0 <- as.data.frame(read.csv(paste('Tesis_Obj_Zs_Scenarios_070224_AllAmb.csv', sep="")))
aux <- as.data.frame(aux_0[filas, c(2,4,10)])
matrix_1 <- matrix(nrow=length(len_S), ncol=length(len_I))
colnames(matrix_1) <- len_I
rownames(matrix_1) <- len_S
count = 1
for (l in 1:length(len_S)){
for (s in 1:length(len_I)){
#matrix[s,l] = aux[count,3]
if (is.na(aux[count,3]) == FALSE){
matrix_1[l,s] = aux[count,3]
}
else{
matrix_1[l,s] = 0
}
}
count = count + 1
}
View(matrix_1)
View(aux)
filas = c(seq(from=(1+counti*(5*length(len_I))), to=((1+counti*(5*length(len_I)))+((5*length(len_I))-1))))
aux_0 <- as.data.frame(read.csv(paste('Tesis_Obj_Zs_Scenarios_070224_AllAmb.csv', sep="")))
aux <- as.data.frame(aux_0[filas, c(2,4,10)])
aux_0 <- as.data.frame(read.csv(paste('Tesis_Obj_Zs_Scenarios_070224_AllAmb.csv', sep="")))
aux <- as.data.frame(aux_0[filas, c(2,4,10)])
matrix_1 <- matrix(nrow=length(len_S), ncol=length(len_I))
colnames(matrix_1) <- len_I
rownames(matrix_1) <- len_S
count = 1
for (s in 1:length(len_I)){
for (l in 1:length(len_S)){
#matrix[s,l] = aux[count,3]
if (is.na(aux[count,3]) == FALSE){
matrix_1[s,l] = aux[count,3]
}
else{
matrix_1[s,l] = 0
}
count = count + 1
}
}
View(matrix_1)
filas = c(seq(from=(1+counti*(5*length(len_I))), to=((1+counti*(5*length(len_I)))+((5*length(len_I))-1))))
aux_0 <- as.data.frame(read.csv(paste('Tesis_Obj_Zs_Scenarios_070224_AllAmb.csv', sep="")))
aux <- as.data.frame(aux_0[filas, c(2,4,10)])
matrix_1 <- matrix(nrow=length(len_S), ncol=length(len_I))
colnames(matrix_1) <- len_I
rownames(matrix_1) <- len_S
count = 1
for (s in 1:length(len_I)){
for (l in 1:length(len_S)){
#matrix[s,l] = aux[count,3]
if (is.na(aux[count,3]) == FALSE){
matrix_1[l,s] = aux[count,3]
}
else{
matrix_1[l,s] = 0
}
count = count + 1
}
}
View(matrix_1)
View(matrix_1)
# time value graphics
counti = 0
par(mfrow = c(1, 3), mar=c(4.5, 5, 3.1, 0.9))
for (a in 1:length(amb[,1])){
# run time
eta <- amb[a,]
filas = c(seq(from=(1+counti*(5*length(len_I))), to=((1+counti*(5*length(len_I)))+((5*length(len_I))-1))))
aux_0 <- as.data.frame(read.csv(paste('Tesis_Obj_Zs_Scenarios_070224_AllAmb.csv', sep="")))
aux <- as.data.frame(aux_0[filas, c(2,4,10)])
matrix <- matrix(nrow=length(len_I), ncol=length(len_S))
colnames(matrix) <- len_S
rownames(matrix) <- len_I
count = 1
for (s in 1:length(len_I)){
for (l in 1:length(len_S)){
#matrix[s,l] = aux[count,3]
if (is.na(aux[count,3]) == FALSE){
matrix[s,l] = aux[count,3]
}
else{
matrix[s,l] = 0
}
count = count + 1
}
}
#pdf(paste("Timeval_",eta[1],"_",eta[2],".pdf", sep=""))
if(a == 1){
plot(matrix[1:length(len_I)], pch=15, col=1, cex=1.5, ylim=c(0,4000),
cex.lab=2.7, cex.axis = 2.5, xlab="demand points", ylab="runtime in seconds",
xaxt= "n", tck = 0.02) #ann = FALSE,
title(paste(eta[1],"BLS and",eta[2],"ALS ambulances", sep=" "), cex.main = 3.5)
} else{
plot(matrix[1:length(len_I)], pch=15, col=1, cex=1.5, ylim=c(0,4000),
cex.lab=2.7, cex.axis = 2.5,xlab="demand points", xaxt = "n",
ylab="runtime in seconds", tck = 0.02)
title(paste(eta[1], "BLS and",eta[2],"ALS ambulances", sep=" "), cex.main=3.5)
}
axis(1, at=1:length(len_I), labels=len_I, cex.axis = 2.5, tck = 0.02)
# plot(matrix[1:5], pch=15, col=1, cex=1.5, ylim=c(0, 15000),
#      xlab="demand points", ylab="runtime in seconds", xaxt = "n",
#      main=paste("Runtime for 16 potential sites \n considering",eta[1],
#                 "BLS and",eta[2],"ALS ambulances", sep=" "))
# axis(1, at=1:5, labels=len_I)
lines(matrix[1:length(len_I)], lwd=3, col=1)
points(matrix[(length(len_I)+1):(2*length(len_I))], pch=16, cex=1.5, col=2)
lines(matrix[(length(len_I)+1):(2*length(len_I))], lwd=3, col=2)
points(matrix[(2*length(len_I)+1):(3*length(len_I))], pch=17, cex=1.5, col=3)
lines(matrix[(2*length(len_I)+1):(3*length(len_I))], lwd=3, col=3)
points(matrix[(3*length(len_I)+1):(4*length(len_I))], pch=18, cex=1.5, col=4)
lines(matrix[(3*length(len_I)+1):(4*length(len_I))], lwd=3, col=4)
points(matrix[(4*length(len_I)+1):(5*length(len_I))], pch=19, cex=1.5, col=6)
lines(matrix[(4*length(len_I)+1):(5*length(len_I))], lwd=3, col=6)
legend(x="top", legend = len_S, horiz=TRUE,
fill = c(1, 2, 3, 4, 6), title = "Scenarios",bty = "n", cex = 2.3)
#dev.off()
counti = counti+1
}
View(matrix)
dev.off()
dev.off()
source("~/EstudiosProfesionales/FIME/Doctorado/TesisDoctoral/Codes/Tesis/ModeloBase_PartialCoverage/Obj_Zs/ResultadosExperimentos1_Graficas.R")
source("~/EstudiosProfesionales/FIME/Doctorado/TesisDoctoral/Codes/Tesis/ModeloBase_PartialCoverage/Obj_Zs/ResultadosExperimentos_NewModel.R")
source("~/EstudiosProfesionales/FIME/Doctorado/TesisDoctoral/Codes/Tesis/ModeloBase_PartialCoverage/Obj_Zs/ResultadosExperimentos_NewModel.R")
setwd("C:/Users/beatr/Documents/EstudiosProfesionales/FIME/Doctorado/TesisDoctoral/Codes/Tesis/ModeloBase_PartialCoverage/Obj_Zs/FinalExperiments_16ps")
source("~/EstudiosProfesionales/FIME/Doctorado/TesisDoctoral/Codes/Tesis/ModeloBase_PartialCoverage/Obj_Zs/ResultadosExperimentos_NewModel.R")
source("~/EstudiosProfesionales/FIME/Doctorado/TesisDoctoral/Codes/Tesis/ModeloBase_PartialCoverage/Obj_Zs/ResultadosExperimentos_NewModel.R")
source("~/EstudiosProfesionales/FIME/Doctorado/TesisDoctoral/Codes/Tesis/ModeloBase_PartialCoverage/Obj_Zs/ResultadosExperimentos1_Graficas.R")
dev.off()
source("~/EstudiosProfesionales/FIME/Doctorado/TesisDoctoral/Codes/Tesis/ModeloBase_PartialCoverage/Obj_Zs/ResultadosExperimentos1_Graficas.R")
