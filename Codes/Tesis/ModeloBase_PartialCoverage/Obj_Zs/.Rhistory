# run time
eta <- amb[a,]
filas = c(seq(from=(1+counti*25), to=((1+counti*25)+24)))
aux_0 <- as.data.frame(read.csv(paste('Tesis_ObjZs_Scenarios_161123_AllAmb.csv', sep="")))
aux <- as.data.frame(aux_0[filas, c(3,4,6)])
matrix <- matrix(nrow=5, ncol=5)
colnames(matrix) <- len_S
rownames(matrix) <- len_I
count = 1
for (s in 1:5){
for (l in 1:5){
#matrix[s,l] = aux[count,3]
if (is.na(aux[count,3]) == FALSE){
matrix[s,l] = aux[count,3]
}
else{
matrix[s,l] = 0
}
count = count + 1
}
}
png(paste(i,"_objval_",eta[1],"_",eta[2],".png", sep=""))
plot(matrix[1:5], pch=15, col=1, cex=1.5, ylim=c(min(matrix)-2, max(matrix)+2),
xlab="scenarios", ylab="objective value", xaxt = "n")
#main=paste("Objective value for", i, "demand points \n considering",eta[1],
#"BLS and",eta[2],"ALS ambulances", sep=" "))
axis(1, at=1:5, labels=len_I)
lines(matrix[1:5], lwd=3, col=1)
points(matrix[6:10], pch=16, cex=1.5, col=2)
lines(matrix[6:10], lwd=3, col=2)
points(matrix[11:15], pch=17, cex=1.5, col=3)
lines(matrix[11:15], lwd=3, col=3)
points(matrix[16:20], pch=18, cex=1.5, col=4)
lines(matrix[16:20], lwd=3, col=4)
points(matrix[21:25], pch=19, cex=1.5, col=6)
lines(matrix[21:25], lwd=3, col=6)
legend(x="topleft", legend = len_S, horiz=TRUE, cex = 0.7, fill = c(1, 2, 3, 4, 6), title = "Sites")
dev.off()
counti = counti+1
}
setwd("C:/Users/beatr/Documents/EstudiosProfesionales/FIME/Doctorado/TesisDoctoral/Codes/Tesis/ModeloBase_PartialCoverage/Obj_Zs")
source("~/EstudiosProfesionales/FIME/Doctorado/TesisDoctoral/Codes/Tesis/ModeloBase_PartialCoverage/Obj_Zs/ResultadosExperimentos1_Graficas.R")
png(paste(i,"_objval_",eta[1],"_",eta[2],".png", sep=""))
plot(matrix[1:5], pch=15, col=1, cex=1.5, ylim=c(min(matrix)-2, max(matrix)+2),
xlab="scenarios", ylab="objective value", xaxt = "n")
#main=paste("Objective value for", i, "demand points \n considering",eta[1],
#"BLS and",eta[2],"ALS ambulances", sep=" "))
axis(1, at=1:5, labels=len_I)
lines(matrix[1:5], lwd=3, col=1)
points(matrix[6:10], pch=16, cex=1.5, col=2)
lines(matrix[6:10], lwd=3, col=2)
points(matrix[11:15], pch=17, cex=1.5, col=3)
lines(matrix[11:15], lwd=3, col=3)
points(matrix[16:20], pch=18, cex=1.5, col=4)
lines(matrix[16:20], lwd=3, col=4)
points(matrix[21:25], pch=19, cex=1.5, col=6)
lines(matrix[21:25], lwd=3, col=6)
legend(x="topleft", legend = len_S, horiz=TRUE, cex = 0.7, fill = c(1, 2, 3, 4, 6), title = "Sites")
dev.off()
counti = counti+1
dev.off()
plot(matrix[1:5], pch=15, col=1, cex=1.5, ylim=c(min(matrix)-2, max(matrix)+2),
xlab="scenarios", ylab="objective value", xaxt = "n")
#main=paste("Objective value for", i, "demand points \n considering",eta[1],
#"BLS and",eta[2],"ALS ambulances", sep=" "))
axis(1, at=1:5, labels=len_I)
lines(matrix[1:5], lwd=3, col=1)
points(matrix[6:10], pch=16, cex=1.5, col=2)
lines(matrix[6:10], lwd=3, col=2)
points(matrix[11:15], pch=17, cex=1.5, col=3)
lines(matrix[11:15], lwd=3, col=3)
points(matrix[16:20], pch=18, cex=1.5, col=4)
lines(matrix[16:20], lwd=3, col=4)
points(matrix[21:25], pch=19, cex=1.5, col=6)
lines(matrix[21:25], lwd=3, col=6)
legend(x="topleft", legend = len_S, horiz=TRUE, cex = 0.7, fill = c(1, 2, 3, 4, 6), title = "Sites")
dev.off()
png(paste(i,"_objval_",eta[1],"_",eta[2],".png", sep=""))
plot(matrix[1:5], pch=15, col=1, cex=1.5, ylim=c(min(matrix)-2, max(matrix)+2),
xlab="scenarios", ylab="objective value", xaxt = "n")
#main=paste("Objective value for", i, "demand points \n considering",eta[1],
#"BLS and",eta[2],"ALS ambulances", sep=" "))
axis(1, at=1:5, labels=len_I)
lines(matrix[1:5], lwd=3, col=1)
points(matrix[6:10], pch=16, cex=1.5, col=2)
lines(matrix[6:10], lwd=3, col=2)
points(matrix[11:15], pch=17, cex=1.5, col=3)
lines(matrix[11:15], lwd=3, col=3)
points(matrix[16:20], pch=18, cex=1.5, col=4)
lines(matrix[16:20], lwd=3, col=4)
points(matrix[21:25], pch=19, cex=1.5, col=6)
lines(matrix[21:25], lwd=3, col=6)
legend(x="topleft", legend = len_S, horiz=TRUE, cex = 0.7, fill = c(1, 2, 3, 4, 6), title = "Sites")
dev.off()
counti = counti+1
for (a in 1:length(amb[,1])){
# run time
eta <- amb[a,]
filas = c(seq(from=(1+counti*25), to=((1+counti*25)+24)))
aux_0 <- as.data.frame(read.csv(paste('Tesis_ObjZs_Scenarios_161123_AllAmb.csv', sep="")))
aux <- as.data.frame(aux_0[filas, c(3,4,6)])
matrix <- matrix(nrow=5, ncol=5)
colnames(matrix) <- len_S
rownames(matrix) <- len_I
count = 1
for (s in 1:5){
for (l in 1:5){
#matrix[s,l] = aux[count,3]
if (is.na(aux[count,3]) == FALSE){
matrix[s,l] = aux[count,3]
}
else{
matrix[s,l] = 0
}
count = count + 1
}
}
png(paste(i,"_objval_",eta[1],"_",eta[2],".png", sep=""))
plot(matrix[1:5], pch=15, col=1, cex=1.5, ylim=c(min(matrix)-2, max(matrix)+2),
xlab="scenarios", ylab="objective value", xaxt = "n")
#main=paste("Objective value for", i, "demand points \n considering",eta[1],
#"BLS and",eta[2],"ALS ambulances", sep=" "))
axis(1, at=1:5, labels=len_I)
lines(matrix[1:5], lwd=3, col=1)
points(matrix[6:10], pch=16, cex=1.5, col=2)
lines(matrix[6:10], lwd=3, col=2)
points(matrix[11:15], pch=17, cex=1.5, col=3)
lines(matrix[11:15], lwd=3, col=3)
points(matrix[16:20], pch=18, cex=1.5, col=4)
lines(matrix[16:20], lwd=3, col=4)
points(matrix[21:25], pch=19, cex=1.5, col=6)
lines(matrix[21:25], lwd=3, col=6)
legend(x="topleft", legend = len_S, horiz=TRUE, cex = 0.7, fill = c(1, 2, 3, 4, 6), title = "Sites")
dev.off()
counti = counti+1
}
# objective value graphics
counti = 0
for (a in 1:length(amb[,1])){
# run time
eta <- amb[a,]
filas = c(seq(from=(1+counti*25), to=((1+counti*25)+24)))
aux_0 <- as.data.frame(read.csv(paste('Tesis_ObjZs_Scenarios_161123_AllAmb.csv', sep="")))
aux <- as.data.frame(aux_0[filas, c(3,4,6)])
matrix <- matrix(nrow=5, ncol=5)
colnames(matrix) <- len_S
rownames(matrix) <- len_I
count = 1
for (s in 1:5){
for (l in 1:5){
#matrix[s,l] = aux[count,3]
if (is.na(aux[count,3]) == FALSE){
matrix[s,l] = aux[count,3]
}
else{
matrix[s,l] = 0
}
count = count + 1
}
}
png(paste("_objval_",eta[1],"_",eta[2],".png", sep=""))
plot(matrix[1:5], pch=15, col=1, cex=1.5, ylim=c(min(matrix)-2, max(matrix)+2),
xlab="scenarios", ylab="objective value", xaxt = "n")
#main=paste("Objective value for", i, "demand points \n considering",eta[1],
#"BLS and",eta[2],"ALS ambulances", sep=" "))
axis(1, at=1:5, labels=len_I)
lines(matrix[1:5], lwd=3, col=1)
points(matrix[6:10], pch=16, cex=1.5, col=2)
lines(matrix[6:10], lwd=3, col=2)
points(matrix[11:15], pch=17, cex=1.5, col=3)
lines(matrix[11:15], lwd=3, col=3)
points(matrix[16:20], pch=18, cex=1.5, col=4)
lines(matrix[16:20], lwd=3, col=4)
points(matrix[21:25], pch=19, cex=1.5, col=6)
lines(matrix[21:25], lwd=3, col=6)
legend(x="topleft", legend = len_S, horiz=TRUE, cex = 0.7, fill = c(1, 2, 3, 4, 6), title = "Sites")
dev.off()
counti = counti+1
}
# objective value graphics
counti = 0
for (a in 1:length(amb[,1])){
# run time
eta <- amb[a,]
filas = c(seq(from=(1+counti*25), to=((1+counti*25)+24)))
aux_0 <- as.data.frame(read.csv(paste('Tesis_ObjZs_Scenarios_161123_AllAmb.csv', sep="")))
aux <- as.data.frame(aux_0[filas, c(3,4,6)])
matrix <- matrix(nrow=5, ncol=5)
colnames(matrix) <- len_S
rownames(matrix) <- len_I
count = 1
for (s in 1:5){
for (l in 1:5){
#matrix[s,l] = aux[count,3]
if (is.na(aux[count,3]) == FALSE){
matrix[s,l] = aux[count,3]
}
else{
matrix[s,l] = 0
}
count = count + 1
}
}
png(paste("_objval_",eta[1],"_",eta[2],".png", sep=""))
plot(matrix[1:5], pch=15, col=1, cex=1.5, ylim=c(min(matrix)-2, max(matrix)+2),
xlab="scenarios", ylab="objective value", xaxt = "n")
#main=paste("Objective value for", i, "demand points \n considering",eta[1],
#"BLS and",eta[2],"ALS ambulances", sep=" "))
axis(1, at=1:5, labels=len_I)
lines(matrix[1:5], lwd=3, col=1)
points(matrix[6:10], pch=16, cex=1.5, col=2)
lines(matrix[6:10], lwd=3, col=2)
points(matrix[11:15], pch=17, cex=1.5, col=3)
lines(matrix[11:15], lwd=3, col=3)
points(matrix[16:20], pch=18, cex=1.5, col=4)
lines(matrix[16:20], lwd=3, col=4)
points(matrix[21:25], pch=19, cex=1.5, col=6)
lines(matrix[21:25], lwd=3, col=6)
legend(x="topleft", legend = len_S, horiz=TRUE, cex = 0.9, fill = c(1, 2, 3, 4, 6), title = "Sites")
dev.off()
counti = counti+1
}
# objective value graphics
counti = 0
source("~/EstudiosProfesionales/FIME/Doctorado/TesisDoctoral/Codes/Tesis/ModeloBase_PartialCoverage/Obj_Zs/ResultadosExperimentos1_Graficas.R")
source("~/EstudiosProfesionales/FIME/Doctorado/TesisDoctoral/Codes/Tesis/ModeloBase_PartialCoverage/Obj_Zs/ResultadosExperimentos1_Graficas.R")
plot(matrix[1:5], pch=15, col=1, cex=1.5, ylim=c(min(matrix)-2, max(matrix)+2),
xlab="scenarios", ylab="objective value", xaxt = "n")
main=paste("Objective value for 16 potential sites \n considering",eta[1],
"BLS and",eta[2],"ALS ambulances", sep=" ")
axis(1, at=1:5, labels=len_I)
lines(matrix[1:5], lwd=3, col=1)
points(matrix[6:10], pch=16, cex=1.5, col=2)
lines(matrix[6:10], lwd=3, col=2)
points(matrix[11:15], pch=17, cex=1.5, col=3)
lines(matrix[11:15], lwd=3, col=3)
points(matrix[16:20], pch=18, cex=1.5, col=4)
lines(matrix[16:20], lwd=3, col=4)
points(matrix[21:25], pch=19, cex=1.5, col=6)
lines(matrix[21:25], lwd=3, col=6)
legend(x="topleft", legend = len_S, horiz=TRUE, cex = 0.9, fill = c(1, 2, 3, 4, 6), title = "Sites")
dev.off()
counti = counti+1
source("~/EstudiosProfesionales/FIME/Doctorado/TesisDoctoral/Codes/Tesis/ModeloBase_PartialCoverage/Obj_Zs/ResultadosExperimentos1_Graficas.R")
source("~/EstudiosProfesionales/FIME/Doctorado/TesisDoctoral/Codes/Tesis/ModeloBase_PartialCoverage/Obj_Zs/ResultadosExperimentos1_Graficas.R")
View(matrix)
source("~/EstudiosProfesionales/FIME/Doctorado/TesisDoctoral/Codes/Tesis/ModeloBase_PartialCoverage/Obj_Zs/ResultadosExperimentos1_Graficas.R")
source("~/EstudiosProfesionales/FIME/Doctorado/TesisDoctoral/Codes/Tesis/ModeloBase_PartialCoverage/Obj_Zs/ResultadosExperimentos1_Graficas.R")
source("~/EstudiosProfesionales/FIME/Doctorado/TesisDoctoral/Codes/Tesis/ModeloBase_PartialCoverage/Obj_Zs/ResultadosExperimentos1_Graficas.R")
source("~/EstudiosProfesionales/FIME/Doctorado/TesisDoctoral/Codes/Tesis/ModeloBase_PartialCoverage/Obj_Zs/ResultadosExperimentos1_Graficas.R")
source("~/EstudiosProfesionales/FIME/Doctorado/TesisDoctoral/Codes/Tesis/ModeloBase_PartialCoverage/Obj_Zs/ResultadosExperimentos1_Graficas.R")
# time value graphics
counti = 0
for (a in 1:length(amb[,1])){
# run time
eta <- amb[a,]
filas = c(seq(from=(1+counti*25), to=((1+counti*25)+24)))
#aux_0 <- as.data.frame(read.csv(paste('Tesis_ObjZs_Scenarios_161123_AllAmb.csv', sep="")))
aux <- as.data.frame(aux_0[filas, c(3,4,10)])
matrix <- matrix(nrow=5, ncol=5)
colnames(matrix) <- len_S
rownames(matrix) <- len_I
count = 1
for (s in 1:5){
for (l in 1:5){
#matrix[s,l] = aux[count,3]
if (is.na(aux[count,3]) == FALSE){
matrix[s,l] = aux[count,3]
}
else{
matrix[s,l] = 0
}
count = count + 1
}
}
png(paste("Timeval_",eta[1],"_",eta[2],".png", sep=""))
plot(matrix[1:5], pch=15, col=1, cex=1.5, ylim=c(0, 20000),
xlab="demand points", ylab="objective value", xaxt = "n",
main=paste("Runtime for 16 potential sites \n considering",eta[1],
"BLS and",eta[2],"ALS ambulances", sep=" "))
axis(1, at=1:5, labels=len_I)
lines(matrix[1:5], lwd=3, col=1)
points(matrix[6:10], pch=16, cex=1.5, col=2)
lines(matrix[6:10], lwd=3, col=2)
points(matrix[11:15], pch=17, cex=1.5, col=3)
lines(matrix[11:15], lwd=3, col=3)
points(matrix[16:20], pch=18, cex=1.5, col=4)
lines(matrix[16:20], lwd=3, col=4)
points(matrix[21:25], pch=19, cex=1.5, col=6)
lines(matrix[21:25], lwd=3, col=6)
legend(x="topleft", legend = len_S, horiz=TRUE, cex = 0.9, fill = c(1, 2, 3, 4, 6), title = "Scenarios")
dev.off()
counti = counti+1
}
# time value graphics
counti = 0
for (a in 1:length(amb[,1])){
# run time
eta <- amb[a,]
filas = c(seq(from=(1+counti*25), to=((1+counti*25)+24)))
#aux_0 <- as.data.frame(read.csv(paste('Tesis_ObjZs_Scenarios_161123_AllAmb.csv', sep="")))
aux <- as.data.frame(aux_0[filas, c(3,4,10)])
matrix <- matrix(nrow=5, ncol=5)
colnames(matrix) <- len_S
rownames(matrix) <- len_I
count = 1
for (s in 1:5){
for (l in 1:5){
#matrix[s,l] = aux[count,3]
if (is.na(aux[count,3]) == FALSE){
matrix[s,l] = aux[count,3]
}
else{
matrix[s,l] = 0
}
count = count + 1
}
}
png(paste("Timeval_",eta[1],"_",eta[2],".png", sep=""))
plot(matrix[1:5], pch=15, col=1, cex=1.5, ylim=c(0, 18000),
xlab="demand points", ylab="objective value", xaxt = "n",
main=paste("Runtime for 16 potential sites \n considering",eta[1],
"BLS and",eta[2],"ALS ambulances", sep=" "))
axis(1, at=1:5, labels=len_I)
lines(matrix[1:5], lwd=3, col=1)
points(matrix[6:10], pch=16, cex=1.5, col=2)
lines(matrix[6:10], lwd=3, col=2)
points(matrix[11:15], pch=17, cex=1.5, col=3)
lines(matrix[11:15], lwd=3, col=3)
points(matrix[16:20], pch=18, cex=1.5, col=4)
lines(matrix[16:20], lwd=3, col=4)
points(matrix[21:25], pch=19, cex=1.5, col=6)
lines(matrix[21:25], lwd=3, col=6)
legend(x="topleft", legend = len_S, horiz=TRUE, cex = 0.9, fill = c(1, 2, 3, 4, 6), title = "Scenarios")
dev.off()
counti = counti+1
}
# time value graphics
counti = 0
for (a in 1:length(amb[,1])){
# run time
eta <- amb[a,]
filas = c(seq(from=(1+counti*25), to=((1+counti*25)+24)))
#aux_0 <- as.data.frame(read.csv(paste('Tesis_ObjZs_Scenarios_161123_AllAmb.csv', sep="")))
aux <- as.data.frame(aux_0[filas, c(3,4,10)])
matrix <- matrix(nrow=5, ncol=5)
colnames(matrix) <- len_S
rownames(matrix) <- len_I
count = 1
for (s in 1:5){
for (l in 1:5){
#matrix[s,l] = aux[count,3]
if (is.na(aux[count,3]) == FALSE){
matrix[s,l] = aux[count,3]
}
else{
matrix[s,l] = 0
}
count = count + 1
}
}
png(paste("Timeval_",eta[1],"_",eta[2],".png", sep=""))
plot(matrix[1:5], pch=15, col=1, cex=1.5, ylim=c(0, 15000),
xlab="demand points", ylab="objective value", xaxt = "n",
main=paste("Runtime for 16 potential sites \n considering",eta[1],
"BLS and",eta[2],"ALS ambulances", sep=" "))
axis(1, at=1:5, labels=len_I)
lines(matrix[1:5], lwd=3, col=1)
points(matrix[6:10], pch=16, cex=1.5, col=2)
lines(matrix[6:10], lwd=3, col=2)
points(matrix[11:15], pch=17, cex=1.5, col=3)
lines(matrix[11:15], lwd=3, col=3)
points(matrix[16:20], pch=18, cex=1.5, col=4)
lines(matrix[16:20], lwd=3, col=4)
points(matrix[21:25], pch=19, cex=1.5, col=6)
lines(matrix[21:25], lwd=3, col=6)
legend(x="topleft", legend = len_S, horiz=TRUE, cex = 0.9, fill = c(1, 2, 3, 4, 6), title = "Scenarios")
dev.off()
counti = counti+1
}
source("~/EstudiosProfesionales/FIME/Doctorado/TesisDoctoral/Codes/Tesis/ModeloBase_PartialCoverage/Obj_Zs/ResultadosExperimentos1_Graficas.R")
source("~/EstudiosProfesionales/FIME/Doctorado/TesisDoctoral/Codes/Tesis/ModeloBase_PartialCoverage/Obj_Zs/ResultadosExperimentos1_Graficas.R")
for (a in 1:length(amb[,1])){
png(paste("Coverage_",eta[1],"_",eta[2],".pdf", sep=""))
plot(as.integer(accidents_covered_total[a*5-4, 4:8]), pch=15, col=1, cex=1.5,
ylim=c(0, 100), ylab="% accidents coverage", xlab = "Coverage type", xaxt = "n",
main=paste("Coverage percentage for 16 potential sites \n considering",eta[1],
"BLS and",eta[2],"ALS ambulances", sep=" "))
axis(1, at=1:5, labels=c("Full", "Partial1", "Partial2", "Partial3", "Null"))
lines(as.integer(accidents_covered_total[a*5-4, 4:8]), lwd=3, col=1)
points(as.integer(accidents_covered_total[a*5-3, 4:8]), pch=16, cex=1.5, col=2)
lines(as.integer(accidents_covered_total[a*5-3, 4:8]), lwd=3, col=2)
points(as.integer(accidents_covered_total[a*5-2, 4:8]), pch=17, cex=1.5, col=3)
lines(as.integer(accidents_covered_total[a*5-2, 4:8]), lwd=3, col=3)
points(as.integer(accidents_covered_total[a*5-1, 4:8]), pch=18, cex=1.5, col=4)
lines(as.integer(accidents_covered_total[a*5-1, 4:8]), lwd=3, col=4)
points(as.integer(accidents_covered_total[a*5, 4:8]), pch=19, cex=1.5, col=6)
lines(as.integer(accidents_covered_total[a*5, 4:8]), lwd=3, col=6)
#legend(x="topright", legend = len_I, cex=0.65, fill = c(1, 2, 3, 4, 6),
#       title = "Demand points", bty="n")
dev.off()
}
for (a in 1:length(amb[,1])){
png(paste("Coverage_",eta[1],"_",eta[2],".pdf", sep=""))
plot(as.integer(accidents_covered_total[a*5-4, 4:8]), pch=15, col=1, cex=1.5,
ylim=c(0, 100), ylab="% accidents coverage", xlab = "Coverage type", xaxt = "n",
main=paste("Coverage percentage for 16 potential sites \n considering",eta[1],
"BLS and",eta[2],"ALS ambulances", sep=" "))
axis(1, at=1:5, labels=c("Full", "Partial1", "Partial2", "Partial3", "Null"))
lines(as.integer(accidents_covered_total[a*5-4, 4:8]), lwd=3, col=1)
points(as.integer(accidents_covered_total[a*5-3, 4:8]), pch=16, cex=1.5, col=2)
lines(as.integer(accidents_covered_total[a*5-3, 4:8]), lwd=3, col=2)
points(as.integer(accidents_covered_total[a*5-2, 4:8]), pch=17, cex=1.5, col=3)
lines(as.integer(accidents_covered_total[a*5-2, 4:8]), lwd=3, col=3)
points(as.integer(accidents_covered_total[a*5-1, 4:8]), pch=18, cex=1.5, col=4)
lines(as.integer(accidents_covered_total[a*5-1, 4:8]), lwd=3, col=4)
points(as.integer(accidents_covered_total[a*5, 4:8]), pch=19, cex=1.5, col=6)
lines(as.integer(accidents_covered_total[a*5, 4:8]), lwd=3, col=6)
#legend(x="topright", legend = len_I, cex=0.65, fill = c(1, 2, 3, 4, 6),
#       title = "Demand points", bty="n")
dev.off()
}
for (a in 1:length(amb[,1])){
#png(paste("Coverage_",eta[1],"_",eta[2],".pdf", sep=""))
plot(as.integer(accidents_covered_total[a*5-4, 4:8]), pch=15, col=1, cex=1.5,
ylim=c(0, 100), ylab="% accidents coverage", xlab = "Coverage type", xaxt = "n",
main=paste("Coverage percentage for 16 potential sites \n considering",eta[1],
"BLS and",eta[2],"ALS ambulances", sep=" "))
axis(1, at=1:5, labels=c("Full", "Partial1", "Partial2", "Partial3", "Null"))
lines(as.integer(accidents_covered_total[a*5-4, 4:8]), lwd=3, col=1)
points(as.integer(accidents_covered_total[a*5-3, 4:8]), pch=16, cex=1.5, col=2)
lines(as.integer(accidents_covered_total[a*5-3, 4:8]), lwd=3, col=2)
points(as.integer(accidents_covered_total[a*5-2, 4:8]), pch=17, cex=1.5, col=3)
lines(as.integer(accidents_covered_total[a*5-2, 4:8]), lwd=3, col=3)
points(as.integer(accidents_covered_total[a*5-1, 4:8]), pch=18, cex=1.5, col=4)
lines(as.integer(accidents_covered_total[a*5-1, 4:8]), lwd=3, col=4)
points(as.integer(accidents_covered_total[a*5, 4:8]), pch=19, cex=1.5, col=6)
lines(as.integer(accidents_covered_total[a*5, 4:8]), lwd=3, col=6)
#legend(x="topright", legend = len_I, cex=0.65, fill = c(1, 2, 3, 4, 6),
#       title = "Demand points", bty="n")
#dev.off()
}
amb[,1]
amb[,1]
amb[1,]
eta = amb[1,]
eta[1]
for (a in 1:length(amb[,1])){
eta = amb[1,]
png(paste("Coverage_",eta[1],"_",eta[2],".pdf", sep=""))
plot(as.integer(accidents_covered_total[a*5-4, 4:8]), pch=15, col=1, cex=1.5,
ylim=c(0, 100), ylab="% accidents coverage", xlab = "Coverage type", xaxt = "n",
main=paste("Coverage percentage for 16 potential sites \n considering",eta[1],
"BLS and",eta[2],"ALS ambulances", sep=" "))
axis(1, at=1:5, labels=c("Full", "Partial1", "Partial2", "Partial3", "Null"))
lines(as.integer(accidents_covered_total[a*5-4, 4:8]), lwd=3, col=1)
points(as.integer(accidents_covered_total[a*5-3, 4:8]), pch=16, cex=1.5, col=2)
lines(as.integer(accidents_covered_total[a*5-3, 4:8]), lwd=3, col=2)
points(as.integer(accidents_covered_total[a*5-2, 4:8]), pch=17, cex=1.5, col=3)
lines(as.integer(accidents_covered_total[a*5-2, 4:8]), lwd=3, col=3)
points(as.integer(accidents_covered_total[a*5-1, 4:8]), pch=18, cex=1.5, col=4)
lines(as.integer(accidents_covered_total[a*5-1, 4:8]), lwd=3, col=4)
points(as.integer(accidents_covered_total[a*5, 4:8]), pch=19, cex=1.5, col=6)
lines(as.integer(accidents_covered_total[a*5, 4:8]), lwd=3, col=6)
#legend(x="topright", legend = len_I, cex=0.65, fill = c(1, 2, 3, 4, 6),
#       title = "Demand points", bty="n")
dev.off()
}
eta[2]
for (a in 1:length(amb[,1])){
eta = amb[a,]
png(paste("Coverage_",eta[1],"_",eta[2],".pdf", sep=""))
plot(as.integer(accidents_covered_total[a*5-4, 4:8]), pch=15, col=1, cex=1.5,
ylim=c(0, 100), ylab="% accidents coverage", xlab = "Coverage type", xaxt = "n",
main=paste("Coverage percentage for 16 potential sites \n considering",eta[1],
"BLS and",eta[2],"ALS ambulances", sep=" "))
axis(1, at=1:5, labels=c("Full", "Partial1", "Partial2", "Partial3", "Null"))
lines(as.integer(accidents_covered_total[a*5-4, 4:8]), lwd=3, col=1)
points(as.integer(accidents_covered_total[a*5-3, 4:8]), pch=16, cex=1.5, col=2)
lines(as.integer(accidents_covered_total[a*5-3, 4:8]), lwd=3, col=2)
points(as.integer(accidents_covered_total[a*5-2, 4:8]), pch=17, cex=1.5, col=3)
lines(as.integer(accidents_covered_total[a*5-2, 4:8]), lwd=3, col=3)
points(as.integer(accidents_covered_total[a*5-1, 4:8]), pch=18, cex=1.5, col=4)
lines(as.integer(accidents_covered_total[a*5-1, 4:8]), lwd=3, col=4)
points(as.integer(accidents_covered_total[a*5, 4:8]), pch=19, cex=1.5, col=6)
lines(as.integer(accidents_covered_total[a*5, 4:8]), lwd=3, col=6)
#legend(x="topright", legend = len_I, cex=0.65, fill = c(1, 2, 3, 4, 6),
#       title = "Demand points", bty="n")
dev.off()
}
for (a in 1:length(amb[,1])){
eta = amb[a,]
pdf(paste("Coverage_",eta[1],"_",eta[2],".pdf", sep=""))
plot(as.integer(accidents_covered_total[a*5-4, 4:8]), pch=15, col=1, cex=1.5,
ylim=c(0, 100), ylab="% accidents coverage", xlab = "Coverage type", xaxt = "n",
main=paste("Coverage percentage for 16 potential sites \n considering",eta[1],
"BLS and",eta[2],"ALS ambulances", sep=" "))
axis(1, at=1:5, labels=c("Full", "Partial1", "Partial2", "Partial3", "Null"))
lines(as.integer(accidents_covered_total[a*5-4, 4:8]), lwd=3, col=1)
points(as.integer(accidents_covered_total[a*5-3, 4:8]), pch=16, cex=1.5, col=2)
lines(as.integer(accidents_covered_total[a*5-3, 4:8]), lwd=3, col=2)
points(as.integer(accidents_covered_total[a*5-2, 4:8]), pch=17, cex=1.5, col=3)
lines(as.integer(accidents_covered_total[a*5-2, 4:8]), lwd=3, col=3)
points(as.integer(accidents_covered_total[a*5-1, 4:8]), pch=18, cex=1.5, col=4)
lines(as.integer(accidents_covered_total[a*5-1, 4:8]), lwd=3, col=4)
points(as.integer(accidents_covered_total[a*5, 4:8]), pch=19, cex=1.5, col=6)
lines(as.integer(accidents_covered_total[a*5, 4:8]), lwd=3, col=6)
#legend(x="topright", legend = len_I, cex=0.65, fill = c(1, 2, 3, 4, 6),
#       title = "Demand points", bty="n")
dev.off()
}
source("~/EstudiosProfesionales/FIME/Doctorado/TesisDoctoral/Codes/Tesis/ModeloBase_PartialCoverage/Obj_Zs/ResultadosExperimentos1_Graficas.R")
