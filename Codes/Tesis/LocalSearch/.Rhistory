}
for (sconj in 1:length(tamanos_S)){
#Nombre: Instancias_Prueba_I_L_S
instancename <- paste('InstanciasReales_EneroPeriodo1Diario',toString(tamanos_I[iconj]),'_',
toString(tamanos_L[jconj]),'_', toString(tamanos_S[sconj]),'.txt', sep = "")
################################
############# SETS #############
################################
write(len_I, file = instancename)
write(len_L, file = instancename, append=TRUE)
len_S = tamanos_S[sconj]
write(len_S, file = instancename, append=TRUE)
###############################
########## DEMANDA ###########
##############################
Demand_Day <- read.csv("CoordenadasAccidentes_Periodo1Diario.csv")
colnames(Demand_Day) <- c(seq(0,31,1))
write.table(Demand_Day, file = instancename, row.names = FALSE, col.names = FALSE, append=TRUE)
################################
########## SCENARIOS ###########
################################
proporcion_i <- c()
sumatotal = 0
for (i in 1:len_I){
Demand_Day_i = sum(Demand_Day[,i])
proporcion_i <- cbind(proporcion_i, Demand_Day_i/totalAccidentes)
sumatotal = sumatotal + Demand_Day_Day_i/totalAccidentes
}
S <- matrix(nrow=len_S, ncol=len_I*length(K))
for (s in 1:len_S){
count = 1
for (i in 1:len_I){
Demand_Day_i = sample(Demand_Day[,i], 1)
aux <- sample(1:Demand_Day_i, 1, prob=rexp(1:Demand_Day_i, proporcion_i[i]))
S[s,count] = as.integer((2*aux)/3)
count = count + 1
S[s,count] = as.integer(aux/3)
count = count + 1
}
}
write.table(S, file = instancename, row.names = FALSE, col.names = FALSE, append=TRUE)
################################
####### RESPONSE TIMES #########
################################
write.table(r_li, file = instancename, row.names = FALSE, col.names = FALSE, append=TRUE)
################################
############ C_li ##############
################################
c_li <- c()
for (l in 1:len_L){
c_li_aux <- c()
for (i in 1:len_I){
if (r_li[l,i] <= t){
c_li_aux <- cbind(c_li_aux, 1)
}
else {
if (t < r_li[l,i] &&  r_li[l,i] < tmax){
d_rli = 1 - ((r_li[l,i]-t)/(tmax-t))
c_li_aux <- cbind(c_li_aux, d_rli)
}
else{
c_li_aux <- cbind(c_li_aux, 0)
}
}
}
c_li <- rbind(c_li, c_li_aux)
}
write.table(c_li, file = instancename, row.names = FALSE, col.names = FALSE, append=TRUE)
cantMaxAmbulancias <- c(as.integer(runif(len_L, 1, 5)))
write.table(cantMaxAmbulancias, file = instancename, row.names = FALSE, col.names = FALSE, append=TRUE)
}
instancename <- paste('InstanciasReales_EneroPeriodo1Diario',toString(tamanos_I[iconj]),'_',
toString(tamanos_L[jconj]),'_', toString(tamanos_S[sconj]),'.txt', sep = "")
write(len_I, file = instancename)
write(len_L, file = instancename, append=TRUE)
len_S = tamanos_S[sconj]
write(len_S, file = instancename, append=TRUE)
Demand_Day <- read.csv("CoordenadasAccidentes_Periodo1Diario.csv")
colnames(Demand_Day) <- c(seq(0,31,1))
View(Demand_Day)
write.table(Demand_Day, file = instancename, row.names = FALSE, col.names = FALSE, append=TRUE)
proporcion_i <- c()
sumatotal = 0
for (i in 1:len_I){
Demand_Day_i = sum(Demand_Day[,i])
proporcion_i <- cbind(proporcion_i, Demand_Day_i/totalAccidentes)
sumatotal = sumatotal + Demand_Day_Day_i/totalAccidentes
}
source("~/EstudiosProfesionales/FIME/Doctorado/TesisDoctoral/Codes/Tesis/LocalSearch/InstanciasReales.R")
source("~/EstudiosProfesionales/FIME/Doctorado/TesisDoctoral/Codes/Tesis/LocalSearch/InstanciasTS.R")
View(Demand)
totalAccidentes = sum(Demand_Day[,1:(len_I+1)])
totalAccidentes = sum(Demand_Day[1:len_I,])
totalAccidentes = sum(Demand_Day[1:len_I,])
totalAccidentes = sum(Demand_Day[1:len_I,2:length(Demand_Day[1,])])
totalAccidentes = sum(Demand_Day[1:len_I,2:31])
totalAccidentes
totalAccidentes = 0
for (i in 1:length(Demand_Day[,1])){
for (j in 2:length(Demand_Day[1,])){
totalAccidentes = totalAccidentes + Demand_Day[i,j]
}
}
source("~/EstudiosProfesionales/FIME/Doctorado/TesisDoctoral/Codes/Tesis/LocalSearch/InstanciasReales.R")
source("~/EstudiosProfesionales/FIME/Doctorado/TesisDoctoral/Codes/Tesis/LocalSearch/InstanciasReales.R")
View(Demand)
source("~/EstudiosProfesionales/FIME/Doctorado/TesisDoctoral/Codes/Tesis/LocalSearch/InstanciasReales.R")
View(S)
Demand_Day <- read.csv("CoordenadasAccidentes_Periodo1Diario.csv")
colnames(Demand_Day) <- c(seq(0,31,1))
write.table(Demand_Day, file = instancename, row.names = FALSE, col.names = FALSE, append=TRUE)
totalAccidentes = 0
for (i in 1:length(Demand_Day[,1])){
for (j in 2:length(Demand_Day[1,])){
totalAccidentes = totalAccidentes + Demand_Day[i,j]
}
}
proporcion_i <- c()
sumatotal = 0
for (i in 1:len_I){
Demand_Day_i = sum(Demand_Day[i,])
proporcion_i <- cbind(proporcion_i, Demand_Day_i/totalAccidentes)
sumatotal = sumatotal + Demand_Day_i/totalAccidentes
}
proporcion_i <- c()
sumatotal = 0
for (i in 2:length(Demand_Day[i,])){
Demand_Day_i = sum(Demand_Day[i,])
proporcion_i <- cbind(proporcion_i, Demand_Day_i/totalAccidentes)
sumatotal = sumatotal + Demand_Day_i/totalAccidentes
}
proporcion_i <- c()
sumatotal = 0
for (i in 1:len_I){
Demand_Day_i = sum(Demand_Day[2:length(Demand_Day[i,]),])
proporcion_i <- cbind(proporcion_i, Demand_Day_i/totalAccidentes)
sumatotal = sumatotal + Demand_Day_i/totalAccidentes
}
Demand_Day[i,]
length(Demand_Day[i,])
Demand_Day[2:length(Demand_Day[i,]),]
proporcion_i <- c()
sumatotal = 0
for (i in 1:len_I){
Demand_Day_i = sum(Demand_Day[,2:length(Demand_Day[i,])])
proporcion_i <- cbind(proporcion_i, Demand_Day_i/totalAccidentes)
sumatotal = sumatotal + Demand_Day_i/totalAccidentes
}
View(proporcion_i)
proporcion_i <- c()
sumatotal = 0
for (i in 1:len_I){
Demand_Day_i = sum(Demand_Day[i,2:length(Demand_Day[i,])])
proporcion_i <- cbind(proporcion_i, Demand_Day_i/totalAccidentes)
sumatotal = sumatotal + Demand_Day_i/totalAccidentes
}
View(proporcion_i)
source("~/EstudiosProfesionales/FIME/Doctorado/TesisDoctoral/Codes/Tesis/LocalSearch/InstanciasReales.R")
proporcion_i <- c()
sumatotal = 0
for (i in 1:len_I){
Demand_Day_i = sum(Demand_Day[i,2:length(Demand_Day[i,])])
proporcion_i <- cbind(proporcion_i, Demand_Day_i/totalAccidentes)
sumatotal = sumatotal + Demand_Day_i/totalAccidentes
}
S <- matrix(nrow=len_S, ncol=len_I*length(K))
for (s in 1:len_S){
count = 1
for (i in 1:len_I){
Demand_Day_i = sample(Demand_Day[i,], 1)
aux <- sample(1:Demand_Day_i, 1, prob=rexp(1:Demand_Day_i, proporcion_i[i]))
S[s,count] = as.integer((2*aux)/3)
count = count + 1
S[s,count] = as.integer(aux/3)
count = count + 1
}
}
S <- matrix(nrow=len_S, ncol=len_I*length(K))
for (s in 1:len_S){
count = 1
for (i in 1:len_I){
Demand_Day_i = sample(Demand_Day[i,2:length(Demand_Day[i,])], 1)
aux <- sample(1:Demand_Day_i, 1, prob=rexp(1:Demand_Day_i, proporcion_i[i]))
S[s,count] = as.integer((2*aux)/3)
count = count + 1
S[s,count] = as.integer(aux/3)
count = count + 1
}
}
View(Demand_Day_i)
S <- matrix(nrow=len_S, ncol=len_I*length(K))
for (s in 1:len_S){
count = 1
for (i in 1:len_I){
Demand_Day_i = as.numeric(sample(Demand_Day[i,2:length(Demand_Day[i,])], 1))
aux <- sample(1:Demand_Day_i, 1, prob=rexp(1:Demand_Day_i, proporcion_i[i]))
S[s,count] = as.integer((2*aux)/3)
count = count + 1
S[s,count] = as.integer(aux/3)
count = count + 1
}
}
source("~/EstudiosProfesionales/FIME/Doctorado/TesisDoctoral/Codes/Tesis/LocalSearch/InstanciasReales.R")
View(S)
Demand_Day_i = as.numeric(sample(Demand_Day[i,2:length(Demand_Day[i,])], 1))
Demand_Day_i = as.numeric(sample(Demand_Day[i,2:length(Demand_Day[i,])], 1))
Demand_Day_i = as.numeric(sample(Demand_Day[i,2:length(Demand_Day[i,])], 1))
Demand_Day_i = as.numeric(sample(Demand_Day[i,2:length(Demand_Day[i,])], 1))
Demand_Day_i = as.numeric(sample(Demand_Day[i,2:length(Demand_Day[i,])], 1))
S <- matrix(nrow=len_S, ncol=len_I*length(K))
for (s in 1:len_S){
count = 1
for (i in 1:len_I){
Demand_Day_i = as.numeric(sample(Demand_Day[i,2:length(Demand_Day[i,])], 1))
#aux <- sample(1:Demand_Day_i, 1, prob=rexp(1:Demand_Day_i, proporcion_i[i]))
#S[s,count] = as.integer((2*aux)/3)
#count = count + 1
#S[s,count] = as.integer(aux/3)
#count = count + 1
S[s,count] = as.integer((2*Demand_Day_i)/3)
count = count + 1
S[s,count] = as.integer(Demand_Day_i/3)
count = count + 1
}
}
write.table(S, file = instancename, row.names = FALSE, col.names = FALSE, append=TRUE)
View(S)
View(S)
S <- matrix(nrow=len_S, ncol=len_I*length(K))
for (s in 1:len_S){
count = 1
for (i in 1:len_I){
#aux <- sample(1:Demand_Day_i, 1, prob=rexp(1:Demand_Day_i, proporcion_i[i]))
#S[s,count] = as.integer((2*aux)/3)
#count = count + 1
#S[s,count] = as.integer(aux/3)
#count = count + 1
Demand_Day_i = as.numeric(sample(Demand_Day[i,2:length(Demand_Day[i,])], 1))
S[s,count] = Demand_Day_i
count = count + 1
Demand_Day_i = as.numeric(sample(Demand_Day[i,2:length(Demand_Day[i,])], 1))
S[s,count] = Demand_Day_i
count = count + 1
}
}
View(S)
source("~/EstudiosProfesionales/FIME/Doctorado/TesisDoctoral/Codes/Tesis/LocalSearch/InstanciasTS.R")
source("~/EstudiosProfesionales/FIME/Doctorado/TesisDoctoral/Codes/Tesis/LocalSearch/InstanciasReales.R")
View(Demand_Day)
#############################
###### tiempo de traslado ###
#############################
r_li <- c()
for (sites in 1:len_L){
# Draw N gamma distributed values
y_rgamma <- rgamma(N, shape = 14.2, rate = .85)
# Print values to RStudio console
r_li <- rbind(r_li, as.integer(y_rgamma))
}
View(r_li)
#############################
###### tiempo de traslado ###
#############################
r_li <- c()
for (sites in 1:len_L){
# Draw N gamma distributed values
y_rgamma <- rgamma(N, shape = 14.2, rate = .25)
# Print values to RStudio console
r_li <- rbind(r_li, as.integer(y_rgamma))
}
#############################
###### tiempo de traslado ###
#############################
r_li <- c()
for (sites in 1:len_L){
# Draw N gamma distributed values
y_rgamma <- rgamma(N, shape = 14.2, rate = .55)
# Print values to RStudio console
r_li <- rbind(r_li, as.integer(y_rgamma))
}
#############################
###### tiempo de traslado ###
#############################
r_li <- c()
for (sites in 1:len_L){
# Draw N gamma distributed values
y_rgamma <- rgamma(N, shape = 10, rate = .85)
# Print values to RStudio console
r_li <- rbind(r_li, as.integer(y_rgamma))
}
# Draw N gamma distributed values
y_rgamma <- rgamma(N, shape = 10, rate = .95)
#############################
###### tiempo de traslado ###
#############################
r_li <- c()
for (sites in 1:len_L){
# Draw N gamma distributed values
y_rgamma <- rgamma(N, shape = 10, rate = .95)
# Print values to RStudio console
r_li <- rbind(r_li, as.integer(y_rgamma))
}
#############################
###### tiempo de traslado ###
#############################
r_li <- c()
for (sites in 1:len_L){
# Draw N gamma distributed values
y_rgamma <- rgamma(N, shape = 14.2, rate = .95)
# Print values to RStudio console
r_li <- rbind(r_li, as.integer(y_rgamma))
}
#############################
###### tiempo de traslado ###
#############################
r_li <- c()
for (sites in 1:len_L){
# Draw N gamma distributed values
y_rgamma <- rgamma(N, shape = 14.2, rate = .15)
# Print values to RStudio console
r_li <- rbind(r_li, as.integer(y_rgamma))
}
#############################
###### tiempo de traslado ###
#############################
r_li <- c()
for (sites in 1:len_L){
# Draw N gamma distributed values
y_rgamma <- rgamma(N, shape = 10, rate = .15)
# Print values to RStudio console
r_li <- rbind(r_li, as.integer(y_rgamma))
}
#############################
###### tiempo de traslado ###
#############################
r_li <- c()
for (sites in 1:len_L){
# Draw N gamma distributed values
y_rgamma <- rgamma(N, shape = 9, rate = .15)
# Print values to RStudio console
r_li <- rbind(r_li, as.integer(y_rgamma))
}
#############################
###### tiempo de traslado ###
#############################
r_li <- c()
for (sites in 1:len_L){
# Draw N gamma distributed values
y_rgamma <- rgamma(N, shape = 9, rate = .25)
# Print values to RStudio console
r_li <- rbind(r_li, as.integer(y_rgamma))
}
#############################
###### tiempo de traslado ###
#############################
r_li <- c()
for (sites in 1:len_L){
# Draw N gamma distributed values
y_rgamma <- rgamma(N, shape = 9, rate = .20)
# Print values to RStudio console
r_li <- rbind(r_li, as.integer(y_rgamma))
}
#############################
###### tiempo de traslado ###
#############################
r_li <- c()
for (sites in 1:len_L){
# Draw N gamma distributed values
y_rgamma <- rgamma(N, shape = 9, rate = .50)
# Print values to RStudio console
r_li <- rbind(r_li, as.integer(y_rgamma))
}
#############################
###### tiempo de traslado ###
#############################
r_li <- c()
for (sites in 1:len_L){
# Draw N gamma distributed values
y_rgamma <- rgamma(N, shape = 9, rate = .30)
# Print values to RStudio console
r_li <- rbind(r_li, as.integer(y_rgamma))
}
#############################
###### tiempo de traslado ###
#############################
r_li <- c()
for (sites in 1:len_L){
# Draw N gamma distributed values
y_rgamma <- rgamma(N, shape = 5, rate = .30)
# Print values to RStudio console
r_li <- rbind(r_li, as.integer(y_rgamma))
}
#############################
###### tiempo de traslado ###
#############################
r_li <- c()
for (sites in 1:len_L){
# Draw N gamma distributed values
y_rgamma <- rgamma(N, shape = 6, rate = .30)
# Print values to RStudio console
r_li <- rbind(r_li, as.integer(y_rgamma))
}
# Specify sample size
N <- len_I  ### Quiero i valores pero en cada potencial l
#############################
###### tiempo de traslado ###
#############################
r_li <- c()
for (sites in 1:len_L){
# Draw N gamma distributed values
y_rgamma <- rgamma(N, shape = 8, rate = .30)
# Print values to RStudio console
r_li <- rbind(r_li, as.integer(y_rgamma))
}
#############################
###### tiempo de traslado ###
#############################
r_li <- c()
for (sites in 1:len_L){
# Draw N gamma distributed values
y_rgamma <- rgamma(N, shape = 8, rate = .15)
# Print values to RStudio console
r_li <- rbind(r_li, as.integer(y_rgamma))
}
#############################
###### tiempo de traslado ###
#############################
r_li <- c()
for (sites in 1:len_L){
# Draw N gamma distributed values
y_rgamma <- rgamma(N, shape = 8, rate = .85)
# Print values to RStudio console
r_li <- rbind(r_li, as.integer(y_rgamma))
}
#############################
###### tiempo de traslado ###
#############################
r_li <- c()
for (sites in 1:len_L){
# Draw N gamma distributed values
y_rgamma <- rgamma(N, shape = 8, rate = .55)
# Print values to RStudio console
r_li <- rbind(r_li, as.integer(y_rgamma))
}
#############################
###### tiempo de traslado ###
#############################
r_li <- c()
for (sites in 1:len_L){
# Draw N gamma distributed values
y_rgamma <- rgamma(N, shape = 8, rate = 0.1)
# Print values to RStudio console
r_li <- rbind(r_li, as.integer(y_rgamma))
}
#############################
###### tiempo de traslado ###
#############################
r_li <- c()
for (sites in 1:len_L){
# Draw N gamma distributed values
y_rgamma <- rgamma(N, shape = 8, rate = 0.2)
# Print values to RStudio console
r_li <- rbind(r_li, as.integer(y_rgamma))
}
# Draw N gamma distributed values
y_rgamma <- rgamma(N, shape = 8, rate = 0.3)
#############################
###### tiempo de traslado ###
#############################
r_li <- c()
for (sites in 1:len_L){
# Draw N gamma distributed values
y_rgamma <- rgamma(N, shape = 8, rate = 0.3)
# Print values to RStudio console
r_li <- rbind(r_li, as.integer(y_rgamma))
}
# Draw N gamma distributed values
y_rgamma <- rgamma(N, shape = 8, rate = 0.6)
#############################
###### tiempo de traslado ###
#############################
r_li <- c()
for (sites in 1:len_L){
# Draw N gamma distributed values
y_rgamma <- rgamma(N, shape = 8, rate = 0.6)
# Print values to RStudio console
r_li <- rbind(r_li, as.integer(y_rgamma))
}
#############################
###### tiempo de traslado ###
#############################
r_li <- c()
for (sites in 1:len_L){
# Draw N gamma distributed values
y_rgamma <- rgamma(N, shape = 8, rate = 0.5)
# Print values to RStudio console
r_li <- rbind(r_li, as.integer(y_rgamma))
}
#############################
###### tiempo de traslado ###
#############################
r_li <- c()
for (sites in 1:len_L){
# Draw N gamma distributed values
y_rgamma <- rgamma(N, shape = 8, rate = 0.3)
# Print values to RStudio console
r_li <- rbind(r_li, as.integer(y_rgamma))
}
source("~/EstudiosProfesionales/FIME/Doctorado/TesisDoctoral/Codes/Tesis/LocalSearch/InstanciasTS.R")
source("~/EstudiosProfesionales/FIME/Doctorado/TesisDoctoral/Codes/Tesis/LocalSearch/InstanciasTS.R")
source("~/EstudiosProfesionales/FIME/Doctorado/TesisDoctoral/Codes/Tesis/LocalSearch/InstanciasTS.R")
source("~/EstudiosProfesionales/FIME/Doctorado/TesisDoctoral/Codes/Tesis/LocalSearch/InstanciasTS.R")
